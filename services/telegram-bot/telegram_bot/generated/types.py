# generated by datamodel-codegen:
#   filename:  types.yaml
#   timestamp: 2025-04-06T17:32:54+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Extra, Field


class TaskType(Enum):
    trash = 'trash'
    someday_maybe = 'someday_maybe'
    trigger_someday_maybe = 'trigger_someday_maybe'
    notes = 'notes'
    do_it = 'do_it'
    delegate = 'delegate'
    current_actions = 'current_actions'
    calendar = 'calendar'
    project = 'project'
    completed = 'completed'


class Error(BaseModel):
    class Config:
        extra = Extra.forbid

    message: str = Field(..., description='Сообщение об ошибке')
    code: str = Field(..., description='Код ошибки')


class Task(BaseModel):
    id: Optional[str] = Field(None, description='Уникальный идентификатор задачи')
    description: str = Field(..., description='Описание задачи')
    task_type: TaskType
    created_at: Optional[datetime] = Field(None, description='Время создания задачи')
    user_id: str = Field(..., description='Идентификатор пользователя')
