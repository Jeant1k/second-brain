from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from telegram_bot.clients.api_client import api_client
from telegram_bot.keyboards.inline_keyboards import get_task_view_keyboard, get_confirm_delete_keyboard
from telegram_bot.utils.callback_data import TaskAction
from telegram_bot.internal.states import CommonStates # –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è
from telegram_bot.handlers.task_list_handlers import show_item_list # –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
import logging

logger = logging.getLogger(__name__)
router = Router()

SERVICE_ACTION_CLIENTS = {
    "current_actions": {
        "get_one": None, # API –Ω–µ –∏–º–µ–µ—Ç get one, –ø–æ–ª—É—á–∞–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
        "update": api_client.update_current_action_name,
        "complete": api_client.complete_current_action,
        "remove": api_client.remove_current_action,
        "move_to_sometime": api_client.move_current_action_to_sometime_later,
    },
    "sometime_later": {
        "update": api_client.update_sometime_later_task_name,
        "complete": api_client.complete_sometime_later_task,
        "remove": api_client.remove_sometime_later_task,
        "move_to_current": api_client.move_sometime_later_to_current_actions,
    },
    "waiting": {
        "update": api_client.update_waiting_task_name,
        "complete": api_client.complete_waiting_task,
        "remove": api_client.remove_waiting_task,
    },
    "notes": {
        "update": api_client.update_note_name,
        "remove": api_client.remove_note,
    },
    "completed": { # –û—Å–æ–±–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö, —Ç.–∫. –æ–Ω–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        # "update": ..., # –ó–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –º—ã —Ö—Ä–∞–Ω–∏–º source_type
        # "remove": ..., # "–£–¥–∞–ª–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞"
    }
}
# –í use case –¥–ª—è –í—ã–ø–æ–ª–Ω–µ–Ω–æ: "–¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Ä–≤–∏—Å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—à–ª–∞ –∑–∞–¥–∞—á–∞"
# –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ ID –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª–µ–Ω, –ò–õ–ò –º—ã –¥–æ–ª–∂–Ω—ã –∑–Ω–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫.
# –ï—Å–ª–∏ ID –≥–ª–æ–±–∞–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã, —Ç–æ –ø–æ ID –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å.
# –ï—Å–ª–∏ –Ω–µ—Ç, task –¥–æ–ª–∂–µ–Ω –Ω–µ—Å—Ç–∏ –ø–æ–ª–µ source_service.
# –î–ª—è MVP –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ" - —ç—Ç–æ –≤—ã–∑–æ–≤ remove –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
# –∏–ª–∏ —á—Ç–æ ID –≥–ª–æ–±–∞–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª–µ–Ω –∏ –º—ã –≥–¥–µ-—Ç–æ —Ö—Ä–∞–Ω–∏–º –º–∞–ø–ø–∏–Ω–≥ ID -> —Å–µ—Ä–≤–∏—Å.
# –ó–¥–µ—Å—å –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —è –ø—Ä–µ–¥–ø–æ–ª–æ–∂—É, —á—Ç–æ 'id' –∑–∞–¥–∞—á–∏ –≤ 'completed' —Å–ø–∏—Å–∫–µ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç
# –∏–ª–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫. –ò–ª–∏ —á—Ç–æ –º—ã –ø—Ä–æ—Å—Ç–æ –Ω–µ –¥–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ.

# --- –ü—Ä–æ—Å–º–æ—Ç—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ ---
@router.callback_query(TaskAction.filter(F.action == "view"))
async def handle_view_item_action(query: CallbackQuery, callback_data: TaskAction, state: FSMContext, bot: Bot):
    user_id = query.from_user.id
    item_id = callback_data.item_id
    item_type = callback_data.item_type
    current_list_cursor = callback_data.cursor

    if not query.message:
        await query.answer("–û—à–∏–±–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    # –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –∑–∞–¥–∞—á–∏ (item_name), –Ω–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ –ª–∏–±–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ callback_data (–Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –∏–º–µ–Ω)
    # –õ–∏–±–æ —Å–Ω–æ–≤–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏ –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID, –ª–∏–±–æ –∏–º–µ—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç "get_task_by_id".
    # –í API –Ω–µ—Ç "get_task_by_id". –ü—Ä–æ—â–µ –≤—Å–µ–≥–æ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∑–∞–ø–æ–º–Ω–∏—Ç—å –∏–º—è, –Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Ç–æ
    # –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –∏–ª–∏ —Å–Ω–æ–≤–∞ —Ñ–µ—Ç—á–∏–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ (—á—Ç–æ –ø–ª–æ—Ö–æ).
    # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–∞–∂–∏–º–∞–µ–º "–ù–∞–∑–∞–¥" –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –º—ã –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫.
    # –ï—Å–ª–∏ –∏–¥–µ–º –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å –∫–Ω–æ–ø–∫–∏ —Å–ø–∏—Å–∫–∞, –∏–º—è –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–µ—Ä–µ–¥–∞—Ç—å.
    # –ó–¥–µ—Å—å –¥–ª—è "–ù–∞–∑–∞–¥" –∏ "–û—Ç–º–µ–Ω–∞" –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏, –º—ã –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å —Ç–µ–º –∂–µ ID.
    # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –Ω–∞–º –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∑–∞–Ω–æ–≤–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∏–º—è.
    # –¢–∞–∫ –∫–∞–∫ –Ω–µ—Ç GET /item/{id}, –º—ã –Ω–µ –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –Ω–∞–ø—Ä—è–º—É—é.
    # –ë—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "–ó–∞–≥—Ä—É–∑–∫–∞..." –∏ –∑–∞—Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –Ω–∞–∂–º–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–º–µ–Ω–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    # TODO: –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∑–∞–¥–∞—á–∏ –≤ get_task_view_keyboard –Ω—É–∂–µ–Ω item_name.
    # –ï–≥–æ –Ω—É–∂–Ω–æ –ª–∏–±–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤ state, –ª–∏–±–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å, –ª–∏–±–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å (–µ—Å–ª–∏ –µ—Å—Ç—å API).
    # –°–µ–π—á–∞—Å –≤ get_task_view_keyboard –∏–º—è –∑–∞–¥–∞—á–∏ –±—É–¥–µ—Ç –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "–ó–∞–¥–∞—á–∞/–ó–∞–º–µ—Ç–∫–∞"
    # –†–µ–∞–ª—å–Ω—ã–π item_name –±—É–¥–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –µ—Å–ª–∏ –º—ã –µ–≥–æ –≥–¥–µ-—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏.

    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–º–µ–Ω–∏, —Ç.–∫. —É –Ω–∞—Å –Ω–µ—Ç get by id
    # –í –∏–¥–µ–∞–ª–µ, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∑–∞–¥–∞—á—É –∏–∑ —Å–ø–∏—Å–∫–∞, –µ–µ –∏–º—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ callback_data,
    # –ª–∏–±–æ –º—ã –¥–µ–ª–∞–µ–º get_by_id. –ó–¥–µ—Å—å —è —É–ø—Ä–æ—â—É –∏ –±—É–¥—É –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ "–Ω–∞–∑–∞–¥".
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –Ω–∞ –∫–Ω–æ–ø–∫–µ –±—É–¥–µ—Ç ID, –∞ –Ω–µ –∏–º—è, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
    item_name_display = f"{item_type.replace('_', ' ').capitalize()} ID: {item_id[:8]}"

    # –ï—Å–ª–∏ —É –Ω–∞—Å –∏–º—è –µ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —à–∞–≥–∞ FSM –∏–ª–∏ CallbackData)
    fsm_data = await state.get_data()
    cached_item_name = fsm_data.get(f"item_name_{item_id}")
    if cached_item_name:
        item_name_display = cached_item_name
    else: # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –µ—Å–ª–∏ —ç—Ç–æ inline –∫–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∑–∞–¥–∞—á–∏
        if query.message.reply_markup:
            for row in query.message.reply_markup.inline_keyboard:
                for button in row:
                    if button.callback_data and item_id in button.callback_data:
                        item_name_display = button.text.replace("üìù ","") # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
                        await state.update_data({f"item_name_{item_id}": item_name_display}) # –ö–µ—à–∏—Ä—É–µ–º
                        break
    
    keyboard = get_task_view_keyboard(item_id, item_name_display, item_type, current_list_cursor)
    await query.message.edit_text(f"–î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ (ID: {item_id[:8]}...):", reply_markup=keyboard)
    await query.answer()


# --- –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É ---
@router.callback_query(TaskAction.filter(F.action == "back"))
async def handle_back_to_list_action(query: CallbackQuery, callback_data: TaskAction, state: FSMContext, bot: Bot):
    user_id = query.from_user.id
    item_type = callback_data.item_type
    current_list_cursor = callback_data.cursor # –ö—É—Ä—Å–æ—Ä —Å–ø–∏—Å–∫–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
    await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è)
    await show_item_list(query, item_type, user_id, current_list_cursor, bot=bot)
    # await query.answer() # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ show_item_list


# --- –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ (–Ω–∞—á–∞–ª–æ) ---
@router.callback_query(TaskAction.filter(F.action == "edit"))
async def handle_edit_item_action_prompt(query: CallbackQuery, callback_data: TaskAction, state: FSMContext):
    if not query.message:
        await query.answer("–û—à–∏–±–∫–∞.")
        return
    await state.set_state(CommonStates.waiting_for_new_item_name)
    await state.update_data(
        item_id_to_edit=callback_data.item_id,
        item_type_to_edit=callback_data.item_type,
        original_message_id=query.message.message_id, # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID, —á—Ç–æ–±—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–¥–∞—á–∏
        original_message_chat_id=query.message.chat.id,
        current_list_cursor=callback_data.cursor # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É—Ä—Å–æ—Ä –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
    )
    await query.message.edit_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏/–∑–∞–º–µ—Ç–∫–∏:")
    await query.answer()

# --- –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ (–ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏) ---
@router.message(CommonStates.waiting_for_new_item_name, F.text)
async def handle_process_new_item_name(message: Message, state: FSMContext, bot: Bot):
    new_name = message.text
    data = await state.get_data()
    item_id = data.get("item_id_to_edit")
    item_type = data.get("item_type_to_edit")
    original_message_id = data.get("original_message_id")
    original_message_chat_id = data.get("original_message_chat_id")
    current_list_cursor = data.get("current_list_cursor")

    await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    if not all([item_id, item_type, original_message_id, original_message_chat_id]):
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    update_method = SERVICE_ACTION_CLIENTS.get(item_type, {}).get("update")
    if not update_method:
        await message.reply(f"–î–µ–π—Å—Ç–≤–∏–µ '–æ–±–Ω–æ–≤–∏—Ç—å' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —Ç–∏–ø–∞ '{item_type}'.")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
        if original_message_id and original_message_chat_id:
             keyboard = get_task_view_keyboard(item_id, "–û—à–∏–±–∫–∞ –∏–º–µ–Ω–∏", item_type, current_list_cursor) # –ò–º—è –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å
             await bot.edit_message_text("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.", chat_id=original_message_chat_id, message_id=original_message_id, reply_markup=keyboard)
        return

    response_data, status_code = await update_method(item_id, new_name)

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–¥–∞—á–∏
    keyboard = get_task_view_keyboard(item_id, new_name if status_code == 202 else "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", item_type, current_list_cursor)
    text_to_show = f"–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ '{new_name}'." if status_code == 202 else f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response_data.get('error', status_code)}"
    
    try:
        await bot.edit_message_text(
            text=text_to_show,
            chat_id=original_message_chat_id,
            message_id=original_message_id,
            reply_markup=keyboard
        )
        await message.delete() # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
    except Exception as e: # –ï—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        logger.error(f"Error updating message after rename: {e}")
        await message.answer(text_to_show, reply_markup=keyboard) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º

    await state.update_data({f"item_name_{item_id}": new_name}) # –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è

# --- –î–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏: complete, move_to_sometime, move_to_current ---
async def _handle_simple_item_modification(query: CallbackQuery, callback_data: TaskAction, action_name_rus: str, bot: Bot, state: FSMContext):
    if not query.message:
        await query.answer("–û—à–∏–±–∫–∞.")
        return

    item_id = callback_data.item_id
    item_type = callback_data.item_type
    api_action_key = callback_data.action # "complete", "move_to_sometime", etc.

    action_method = SERVICE_ACTION_CLIENTS.get(item_type, {}).get(api_action_key)
    
    source_service_for_completed = None
    if item_type == "completed": # –û—Å–æ–±–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
        # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∑–∞–¥–∞—á–∏.
        # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ ID —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ—Ñ–∏–∫—Å –∏–ª–∏ –º—ã –≥–¥–µ-—Ç–æ —Ö—Ä–∞–Ω–∏–º —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
        # –≠—Ç–æ —Å–ª–æ–∂–Ω–∞—è —á–∞—Å—Ç—å, –µ—Å–ª–∏ API –Ω–µ –¥–∞–µ—Ç source_type –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
        # –î–ª—è MVP: –µ—Å–ª–∏ —ç—Ç–æ "completed", —Ç–æ complete/move –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞. –¢–æ–ª—å–∫–æ —É–¥–∞–ª–µ–Ω–∏–µ.
        # –ï—Å–ª–∏ API –æ—Ç–¥–∞–µ—Ç Task —Å –ø–æ–ª–µ–º source_type (e.g. 'current_actions'), —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        # task_details = await api_client.get_task_details(item_id) # –ï—Å–ª–∏ –±—ã –±—ã–ª —Ç–∞–∫–æ–π –º–µ—Ç–æ–¥
        # source_service_for_completed = task_details.get('source_type') 
        # action_method = SERVICE_ACTION_CLIENTS.get(source_service_for_completed, {}).get(api_action_key)
        await query.answer("–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–º–æ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –∑–∞–¥–∞—á–∞–º –∏–∑ —ç—Ç–æ–≥–æ –º–µ–Ω—é.", show_alert=True)
        return


    if not action_method:
        await query.answer(f"–î–µ–π—Å—Ç–≤–∏–µ '{action_name_rus}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è '{item_type}'.", show_alert=True)
        return

    resp_data, status_code = await action_method(item_id)

    if status_code == 200:
        await query.answer(f"‚úÖ {action_name_rus}!", show_alert=False)
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫, –æ—Ç–∫—É–¥–∞ —ç–ª–µ–º–µ–Ω—Ç —É—à–µ–ª. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω–µ—Ç—Å—è —Ç—É–¥–∞ —á–µ—Ä–µ–∑ "–ù–∞–∑–∞–¥" –∏–ª–∏ –≤—ã–±–µ—Ä–µ—Ç –∑–∞–Ω–æ–≤–æ.
        # –ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        await query.message.edit_text(f"‚úÖ –≠–ª–µ–º–µ–Ω—Ç '{item_id[:8]}...' –±—ã–ª '{action_name_rus}'.\n–û–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.")
        # –ò–ª–∏ –ª—É—á—à–µ —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        # await show_item_list(query, item_type, query.from_user.id, callback_data.cursor, bot=bot)
    else:
        error_message = resp_data.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞") if resp_data else "–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        await query.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {error_message} ({status_code})", show_alert=True)


@router.callback_query(TaskAction.filter(F.action == "complete"))
async def handle_complete_item_action(query: CallbackQuery, callback_data: TaskAction, bot: Bot, state: FSMContext):
    await _handle_simple_item_modification(query, callback_data, "–í—ã–ø–æ–ª–Ω–µ–Ω–æ", bot, state)

@router.callback_query(TaskAction.filter(F.action == "move_to_sometime"))
async def handle_move_to_sometime_action(query: CallbackQuery, callback_data: TaskAction, bot: Bot, state: FSMContext):
    await _handle_simple_item_modification(query, callback_data, "–ü–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ '–ù–µ —Å–µ–π—á–∞—Å'", bot, state)

@router.callback_query(TaskAction.filter(F.action == "move_to_current"))
async def handle_move_to_current_action(query: CallbackQuery, callback_data: TaskAction, bot: Bot, state: FSMContext):
    await _handle_simple_item_modification(query, callback_data, "–ü–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ '–ó–∞–¥–∞—á–∏'", bot, state)


# --- –£–¥–∞–ª–µ–Ω–∏–µ (–∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è) ---
@router.callback_query(TaskAction.filter(F.action == "delete_prompt"))
async def handle_delete_item_prompt_action(query: CallbackQuery, callback_data: TaskAction, bot: Bot, state: FSMContext):
    if not query.message:
        await query.answer("–û—à–∏–±–∫–∞.")
        return
        
    item_id = callback_data.item_id
    item_type = callback_data.item_type
    confirm_keyboard = get_confirm_delete_keyboard(item_id, item_type, callback_data.cursor)
    entity_name = "–∑–∞–¥–∞—á—É" if item_type != "notes" else "–∑–∞–º–µ—Ç–∫—É"
    if item_type == "completed":
        entity_name = "–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É (–Ω–∞–≤—Å–µ–≥–¥–∞)"

    await query.message.edit_text(f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å {entity_name} (ID: {item_id[:8]}...)?", reply_markup=confirm_keyboard)
    await query.answer()

# --- –£–¥–∞–ª–µ–Ω–∏–µ (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ) ---
@router.callback_query(TaskAction.filter(F.action == "delete_confirm"))
async def handle_delete_item_confirm_action(query: CallbackQuery, callback_data: TaskAction, bot: Bot, state: FSMContext):
    if not query.message:
        await query.answer("–û—à–∏–±–∫–∞.")
        return

    item_id = callback_data.item_id
    original_item_type = callback_data.item_type # –¢–∏–ø —Å–ø–∏—Å–∫–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —É–¥–∞–ª—è–µ–º (current_actions, notes, completed, etc.)
    item_type_for_api_call = original_item_type # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–≤–ø–∞–¥–∞–µ—Ç

    # –û—Å–æ–±–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è "completed"
    # Use case: "telegram-bot –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Ä–≤–∏—Å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—à–ª–∞ –∑–∞–¥–∞—á–∞, —á—Ç–æ–±—ã –ø–æ–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É —É–¥–∞–ª–µ–Ω–Ω–æ–π"
    # –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –º—ã –¥–æ–ª–∂–Ω—ã –∑–Ω–∞—Ç—å `source_service` –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏.
    # –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —ç—Ç–æ —É–∂–µ –µ—Å—Ç—å –≤ `item_id` –∏–ª–∏ –º—ã –º–æ–∂–µ–º –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å.
    # –î–ª—è MVP, –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º —á—Ç–æ "—É–¥–∞–ª–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é" - —ç—Ç–æ –≤—ã–∑–æ–≤ `/remove` –Ω–∞ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö.
    # –ò–ª–∏, –µ—Å–ª–∏ `item_id` —É–Ω–∏–∫–∞–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ, —Ç–æ –º—ã –º–æ–∂–µ–º –∫–∞–∫-—Ç–æ –ø–æ –Ω–µ–º—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å.
    # –≠—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥—É–º–∞—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö.
    # –í–∞—Ä–∏–∞–Ω—Ç 1: ID –∑–∞–¥–∞—á–∏ –∏–º–µ–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å —Å–µ—Ä–≤–∏—Å–∞ (ca_uuid, sl_uuid, wa_uuid).
    # –í–∞—Ä–∏–∞–Ω—Ç 2: Task –æ–±—ä–µ–∫—Ç –∏–∑ API –¥–ª—è "completed" —Å–æ–¥–µ—Ä–∂–∏—Ç source_service.
    # –í–∞—Ä–∏–∞–Ω—Ç 3 (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –¥–ª—è MVP): –£–¥–∞–ª–µ–Ω–∏–µ "completed" –≤—ã–∑—ã–≤–∞–µ—Ç /remove –Ω–∞ –≤—Å–µ—Ö —Ç—Ä–µ—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö –∑–∞–¥–∞—á.
    # –≠—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à, –µ—Å–ª–∏ ID –Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏.
    # –î–ª—è –í–ö–†–ë –ø—Ä–æ—â–µ –≤—Å–µ–≥–æ, –µ—Å–ª–∏ ID –≥–ª–æ–±–∞–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª–µ–Ω –∏ —Å–µ—Ä–≤–∏—Å `completed` –º–æ–∂–µ—Ç —Å–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫.
    # –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ `TaskAction` –¥–ª—è `item_type=completed` –¥–æ–ª–∂–µ–Ω –Ω–µ—Å—Ç–∏ `source_service_type`.
    # –õ–∏–±–æ, –∫–∞–∫ –∑–¥–µ—Å—å, –º—ã –ø—ã—Ç–∞–µ–º—Å—è —É–≥–∞–¥–∞—Ç—å, –∏–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (completed -> deleted), –∫–æ—Ç–æ—Ä–æ–µ
    # –Ω–µ –∑–æ–≤–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π /remove, –∞ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤ –∫–∞–∫–æ–º-—Ç–æ –∞–≥—Ä–µ–≥–∏—Ä—É—é—â–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
    # –¢–ó –≥–æ–≤–æ—Ä–∏—Ç "–ø–æ–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É —É–¥–∞–ª–µ–Ω–Ω–æ–π" - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç –≤—ã–∑–æ–≤ /remove.
    
    # –î–ª—è —Ç–µ–∫—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ —ç—Ç–æ 'completed', –º—ã –ø–æ–ª–∞–≥–∞–µ–º—Å—è, —á—Ç–æ ID —É–Ω–∏–∫–∞–ª–µ–Ω
    # –∏ –±—ç–∫–µ–Ω–¥ —Å–∞–º —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è (—á—Ç–æ –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö).
    # –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –ø—É—Ç—å –¥–ª—è –¢–ó:
    # –ï—Å–ª–∏ callback_data.item_type == "completed", —Ç–æ –Ω–∞–º –Ω—É–∂–µ–Ω –µ—â–µ –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, task_real_source_type)
    # –õ–∏–±–æ –º—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ FSM –∏–ª–∏ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∞—Å—Ç—å—é item_id

    # –£–ø—Ä–æ—â–µ–Ω–∏–µ: –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ "completed" –∑–∞–¥–∞—á–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Å–≤–æ–∏—Ö –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö.
    # –ò –≤—ã–∑–æ–≤ "remove" –¥–ª—è –Ω–∏—Ö - —ç—Ç–æ —Ç–æ—Ç –∂–µ remove, —á—Ç–æ –∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.
    # –ù–û! API –¥–ª—è current_actions, etc., —É–∂–µ –∏–º–µ—é—Ç status (active, completed, deleted).
    # –ü–æ—ç—Ç–æ–º—É "—É–¥–∞–ª–∏—Ç—å" –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ completed -> deleted.

    remove_method = None
    if original_item_type == "current_actions":
        remove_method = SERVICE_ACTION_CLIENTS["current_actions"]["remove"]
    elif original_item_type == "sometime_later":
        remove_method = SERVICE_ACTION_CLIENTS["sometime_later"]["remove"]
    elif original_item_type == "waiting":
        remove_method = SERVICE_ACTION_CLIENTS["waiting"]["remove"]
    elif original_item_type == "notes":
        remove_method = SERVICE_ACTION_CLIENTS["notes"]["remove"]
    elif original_item_type == "completed":
        # –≠—Ç–æ —Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π. –ö–∞–∫–æ–º—É —Å–µ—Ä–≤–∏—Å—É —Å–ª–∞—Ç—å remove?
        # –ï—Å–ª–∏ ID –≥–ª–æ–±–∞–ª—å–Ω—ã - —Ç–æ –Ω–∞–¥–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ ID.
        # –ï—Å–ª–∏ –Ω–µ—Ç - –Ω—É–∂–µ–Ω `source_service` –≤ `callback_data` –∏–ª–∏ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–¥–∞—á–µ.
        # –î–æ–ø—É—Å—Ç–∏–º, –º—ã –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º `current_actions` –∫–∞–∫ fallback, –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫.
        # –≠—Ç–æ –Ω–∞–¥–æ —á–µ—Ç–∫–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ –í–ö–†.
        # "–¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ —Å–µ—Ä–≤–∏—Å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–∏—à–ª–∞ –∑–∞–¥–∞—á–∞"
        # –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —ç—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å.
        # –ü–†–û–ü–£–°–¢–ò–ú —ç—Ç—É –ª–æ–≥–∏–∫—É –¥–ª—è `completed` –≤ `remove_method` –ø–æ–∫–∞,
        # —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ –∑–∞–¥–∞—á–∏ –≤ `callback_data`.
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å `source_type` –≤ `TaskAction` –¥–ª—è `item_type == 'completed'`
        # –ò–ª–∏, –±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ, `completed` –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è API —Å –ø–æ–ª–µ–º `source_service`.
        # **–ó–∞–≥–ª—É—à–∫–∞**:
        await query.message.edit_text(f"‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏–∑ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –¥–ª—è '–í—ã–ø–æ–ª–Ω–µ–Ω–æ'.")
        await query.answer("–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –¥–ª—è '–í—ã–ø–æ–ª–Ω–µ–Ω–æ'", show_alert=True)
        return

    if not remove_method:
        await query.answer(f"–î–µ–π—Å—Ç–≤–∏–µ '—É–¥–∞–ª–∏—Ç—å' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —Ç–∏–ø–∞ '{original_item_type}'.", show_alert=True)
        return

    resp_data, status_code = await remove_method(item_id)

    if status_code == 200:
        await query.answer("üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ!", show_alert=False)
        # –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ (–∏–ª–∏ —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        await query.message.edit_text(f"üóëÔ∏è –≠–ª–µ–º–µ–Ω—Ç '{item_id[:8]}...' —É–¥–∞–ª–µ–Ω.\n–û–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.")
        # await show_item_list(query, original_item_type, query.from_user.id, callback_data.cursor, bot=bot)
    else:
        error_message = resp_data.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞") if resp_data else "–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        await query.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {error_message} ({status_code})", show_alert=True)

