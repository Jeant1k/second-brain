components_manager:
    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound couroutine tasks.
            worker_threads: $worker-threads         # Process tasks in 4 threads.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            worker_threads: $worker-fs-threads

    default_task_processor: main-task-processor

    components:                       # Configuring components that were registered via component_list
        server:
            listener:                 # configuring the main listening socket...
                port: $server-port            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: $logger-level
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        # Dynamic config options. Cache is disabled, updates are disabled.
        dynamic-config:
            # For most of userver dynamic configs, defaults are used, some are overridden here.
            # See userver "dynamic config" docs for what configs exist.
            defaults:
                HTTP_CLIENT_CONNECTION_POOL_SIZE: 1000
                POSTGRES_DEFAULT_COMMAND_CONTROL:
                    network_timeout_ms: 750
                    statement_timeout_ms: 500

        testsuite-support: {}

        http-client:
            load-enabled: $is-testing
            fs-task-processor: fs-task-processor

        tests-control:
            load-enabled: $is-testing
            path: /tests/{action}
            method: POST
            task_processor: main-task-processor
        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        sometime-later-v1-task-post:
            path: /sometime-later/v1/task
            method: POST
            task_processor: main-task-processor
        
        sometime-later-v1-task-complete-post:
            path: /sometime-later/v1/task/complete
            method: POST
            task_processor: main-task-processor
        
        sometime-later-v1-task-pend-post:
            path: /sometime-later/v1/task/pend
            method: POST
            task_processor: main-task-processor

        sometime-later-v1-task-list-post:
            path: /sometime-later/v1/task/list
            method: POST
            task_processor: main-task-processor
        
        sometime-later-v1-task-update-post:
            path: /sometime-later/v1/task/update
            method: POST
            task_processor: main-task-processor
        
        sometime-later-v1-task-remove-post:
            path: /sometime-later/v1/task/remove
            method: POST
            task_processor: main-task-processor
        
        sometime-later-v1-task-current-actions-post:
            path: /sometime-later/v1/task/current/actions
            method: POST
            task_processor: main-task-processor

        internal-sometime-later-v1-task-move-post:
            path: /internal/sometime-later/v1/task/move
            method: POST
            task_processor: main-task-processor

        postgres-sometime-later:
            dbconnection: $dbconnection
            dbconnection#env: DB_CONNECTION
            blocking_task_processor: fs-task-processor
            dns_resolver: async
            sync-start: true
            connlimit_mode: manual

        dns-client:
            fs-task-processor: fs-task-processor

        # Custom components
        tasks-manager:
        tasks-provider:

        # clients
        http-client: # Нужен для работы клиента
            pool-size: 16 # Пример
            thread-name-prefix: http-client
            threads: 4
            user_agent: $<MY_SERVICE_NAME/1.0> #(Замени)
            # ... другие настройки HTTP клиента
        current-actions-client: # Объявление нашего клиента
            # Наследует base-url из config_vars.yaml

